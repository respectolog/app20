import { createSlice } from '@reduxjs/toolkit';
import data from "./data.json";

const datasales = data.days;

var newmassiv = datasales.map(function (item) {
  return [
    {id: "date", name:"Дата", value: item.date},
    {id: "viruchka", name: "Выручка", value: item.nal+item.beznal+item.kreditki},
    {id: "nal", name: "Нал", value: item.nal},
    {id: "beznal", name:"Безнал", value: item.beznal},
    {id: "kreditki", name: "Кредитки", value: item.kreditki},
    {id: "udaldo", name:"Удалено из чека до оплаты", value: item.udaldo},
    {id: "udalposle", name:"Удалено из чека после оплаты", value: item.udalposle},
    {id: "gostey", name:"Гостей", value: item.gostey},
    {id: "chekov", name:"Чеков", value: item.chekov},
    {id: "sredcheck", name:"Средний чек", value: ((item.nal+item.beznal+item.kreditki)/item.chekov).toFixed()},
    {id: "sredguest", name: "Средний гость", value:((item.nal+item.beznal+item.kreditki)/item.gostey).toFixed()},
  ];
});
//
const initialState = {
  list: [],
  sales: newmassiv,
};

// состаяние графика оставил отдельным редюсером но думаю можно один сделать для всего и для данных и для графика и для видимости строк


export const graficSlice = createSlice({
  name: "grafic",
  initialState,

  reducers: {
    changeData: (state, action) => {
      state.list = state.sales.map(function (item) {
        for(let key of item){ // тут тоже for-ы мне не сильно нравятся но синтаксис забыл :(
          if(key.id === "date"){
            var date = key.value;
          }
          if(key.id === action.payload){
            var val = key.value;
          }
        }
        return {date: date, value: val };
      });
    },

    // Use the PayloadAction type to declare the contents of `action.payload`
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
});

export const { changeData } = graficSlice.actions;

export const selectDataMassive = (state) => state.grafic.list;

export default graficSlice.reducer;
